name: Quality Gates Inventory
description: Run bugeera quality gates
author: warningbird
inputs:
  github-token:
    description: GitHub token
    required: false
    default: ''
  openai-api-key:
    description: OpenAI API key
    required: false
    default: ''
  fail-on:
    description: '' or 'policy' to fail on policy violations
    required: false
    default: ''
  output-dir:
    description: Output directory for artifacts
    required: false
    default: 'qg_artifacts'
  upload-artifacts:
    description: 'true' to upload artifacts
    required: false
    default: 'true'
  artifact-name:
    description: Artifact name
    required: false
    default: 'qg_artifacts'
  github-repo:
    description: Repo full name (e.g. owner/repo)
    required: true
  openai-model:
    description: OpenAI model
    required: false
    default: 'gpt-4o-mini'

runs:
  using: composite
  steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install deps
      shell: bash
      run: |
        pip install -r tools/requirements.txt || pip install -r requirements.txt || true

    - name: Run Quality Gates
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        OPENAI_API_KEY: ${{ inputs.openai-api-key }}
        FAIL_ON: ${{ inputs.fail-on }}
        OUTPUT_DIR: ${{ inputs.output-dir }}
        UPLOAD_ARTIFACTS: ${{ inputs.upload-artifacts }}
        ARTIFACT_NAME: ${{ inputs.artifact-name }}
        GITHUB_REPO: ${{ inputs.github-repo }}
        OPENAI_MODEL: ${{ inputs.openai-model }}
      run: |
        set -euo pipefail
        echo "Repo: ${GITHUB_REPO}"
        echo "Output: ${OUTPUT_DIR}"
        mkdir -p "${OUTPUT_DIR}"

        # пример вызова вашего инвентори-скрипта
        python tools/quality_gates_inventory.py \
          --repo "${GITHUB_REPO}" \
          --out "${OUTPUT_DIR}" \
          ${OPENAI_API_KEY:+--openai-key "${OPENAI_API_KEY}"} \
          ${OPENAI_MODEL:+--openai-model "${OPENAI_MODEL}"}

        # провал по policy
        if [ "${FAIL_ON}" = "policy" ]; then
          if [ -f "${OUTPUT_DIR}/policy_failed" ]; then
            echo "Policy failed"
            exit 1
          fi
        fi

    - name: Upload artifacts
      if: ${{ inputs.upload-artifacts == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.output-dir }}